
# Database configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/dvdrental_customer
spring.datasource.username=postgres
spring.datasource.password=postgres

# Hibernate properties
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none

server.port=8081
spring.application.name=customer

#Eureka server location
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/



#Resilience4j properties
resilience4j.circuitbreaker.instances.rental.registerHealthIndicator=true
#This property indicates whether a health indicator bean should be registered for the CircuitBreaker
resilience4j.circuitbreaker.instances.rental.slidingWindowSize=5
#This determines how many calls are included in the statistics used to calculate the CircuitBreaker's state.
resilience4j.circuitbreaker.instances.rental.slidingWindowType=COUNT_BASED
 #Specifies whether the sliding window is based on a count of calls (COUNT_BASED) or a time interval (TIME_BASED).
resilience4j.circuitbreaker.instances.rental.permittedNumberOfCallsInHalfOpenState=3
#The number of permitted calls in the half-open state. When the CircuitBreaker transitions from the open state to the half-open state, this property determines the number of calls that are allowed to pass through before the state is recalculated.
resilience4j.circuitbreaker.instances.rental.minimumNumberOfCalls=2
# The minimum number of calls required before the CircuitBreaker can calculate its state. If the number of calls is below this threshold, the CircuitBreaker will remain closed.
resilience4j.circuitbreaker.instances.rental.waitDurationInOpenState=5s
#The time duration that the CircuitBreaker remains open before transitioning to the half-open state. This duration helps to give the downstream service some time to recover.
resilience4j.circuitbreaker.instances.rental.slowCallRateThreshold=10
#The threshold percentage above which the CircuitBreaker considers a call to be slow. If the actual percentage of slow calls exceeds this threshold, the CircuitBreaker's state is affected.
resilience4j.circuitbreaker.instances.rental.slowCallDurationThreshold=2
#The duration above which a call is considered slow. Calls with a duration exceeding this threshold are counted as slow calls.
resilience4j.circuitbreaker.instances.rental.failureRateThreshold=50
 #The threshold percentage above which the CircuitBreaker transitions from the closed state to the open state. If the failure rate (failed calls / total calls) exceeds this threshold, the CircuitBreaker opens.

resilience4j.timelimiter.instances.rental.timeout-duration=3s

resilience4j.circuitbreaker.instances.rental.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.rental.automaticTransitionFromOpenToHalfOpenEnabled=true

#Resilience4J Retry Properties
resilience4j.retry.instances.rental.max-attempts=3
resilience4j.retry.instances.rental.wait-duration=5s

#Actuator
management.health.rental.enabled=true
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health
management.health.circuitbreakers.enabled=true
