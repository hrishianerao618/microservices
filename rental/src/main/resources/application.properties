
# Database configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/dvdrental_rental
spring.datasource.username=postgres
spring.datasource.password=postgres

# Hibernate properties
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none

server.port=8083
spring.application.name=rental

#Eureka server location
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

#kafka
spring.kafka.bootstrap-servers=localhost:9092
#This property specifies the Kafka brokers' addresses that the producer will connect to. In this case, it's set to localhost:9092, which is the default address for a local Kafka broker.
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#This property specifies the class used to serialize the keys of Kafka messages sent by the producer. In this case, the keys are expected to be strings, and the StringSerializer is used for serialization.
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#This property specifies the class used to serialize the values of Kafka messages sent by the producer. Here, you're using the JsonSerializer provided by Spring Kafka, which serializes values to JSON format.
spring.kafka.template.default-topic=rentalSaveTopic
#This property sets the default topic that the Kafka producer will use when sending messages. In this case, the default topic is rentalSaveTopic.
spring.kafka.producer.properties.spring.json.type.mapping=event:com.microservices.rental.event.RentalEvent
#This property configures the Spring Kafka producer's properties. It specifies that, when serializing messages, the JSON serializer should use a type mapping for the RentalEvent class. This mapping helps the JSON serializer include type information in the serialized JSON so that it can be deserialized correctly.